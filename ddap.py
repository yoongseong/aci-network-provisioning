#!/usr/bin/env python


# list of packages that should be imported for this code to work
import cobra.mit.access
import cobra.mit.request
import cobra.mit.session
import cobra.model.aaa
import cobra.model.draw
import cobra.model.fv
import cobra.model.infra
import cobra.model.l2ext
import cobra.model.l3ext
import cobra.model.ospf
import cobra.model.pol
import cobra.model.vns
import cobra.model.vz
from cobra.internal.codec.xmlcodec import toXMLStr

print "  _____    _                                    _                     _____            _           "
print " |  __ \  (_)                                  (_)                   |  __ \          | |          "
print " | |  | |  _   _ __ ___     ___   _ __    ___   _    ___    _ __     | |  | |   __ _  | |_    __ _ "
print " | |  | | | | | '_ ` _ \   / _ \ | '_ \  / __| | |  / _ \  | '_ \    | |  | |  / _` | | __|  / _` |"
print " | |__| | | | | | | | | | |  __/ | | | | \__ \ | | | (_) | | | | |   | |__| | | (_| | | |_  | (_| |"
print " |_____/  |_| |_| |_| |_|  \___| |_| |_| |___/ |_|  \___/  |_| |_|   |_____/   \__,_|  \__|  \__,_|"

print " _   _      _                      _                    _                        _   _             "
print "| \ | |    | |                    | |        /\        | |                      | | (_)            "
print "|  \| | ___| |___      _____  _ __| | __    /  \  _   _| |_ ___  _ __ ___   __ _| |_ _  ___  _ __  "
print "| . ` |/ _ \ __\ \ /\ / / _ \| '__| |/ /   / /\ \| | | | __/ _ \| '_ ` _ \ / _` | __| |/ _ \| '_ \ "
print "| |\  |  __/ |_ \ V  V / (_) | |  |   <   / ____ \ |_| | || (_) | | | | | | (_| | |_| | (_) | | | |"
print "|_| \_|\___|\__| \_/\_/ \___/|_|  |_|\_\ /_/    \_\__,_|\__\___/|_| |_| |_|\__,_|\__|_|\___/|_| |_|"


# log into an APIC and create a directory object
ls = cobra.mit.session.LoginSession('http://172.31.216.24', 'admin', 'scotch123')
md = cobra.mit.access.MoDirectory(ls)
md.login()

# the top level object on which operations will be made
polUni = cobra.model.pol.Uni('')
infraInfra = cobra.model.infra.Infra(polUni)
infraFuncP = cobra.model.infra.FuncP(infraInfra)

print "\n"
print "This script will automate the creation of the following thru the power of Python Cobra."
print "- Tenant, ANP, EPG, BD"
print "- External L2 and L3 OSPF connectivity with the existing Catalyst network"
print "- Vcenter networking portgroup"
print "- Service chaining with ASAv and F5 Load Balancer"
print "\n"
raw_input("Hit return to create the tenant, VRF and BD now.") 

# build the tenant using cobra syntax
fvTenant = cobra.model.fv.Tenant(polUni, ownerKey=u'', name=u'DDMY', descr=u'', ownerTag=u'')
fvCtx = cobra.model.fv.Ctx(fvTenant, ownerKey=u'', name=u'DDMY_VRF', descr=u'', knwMcastAct=u'permit', pcEnfDir=u'ingress', ownerTag=u'', pcEnfPref=u'enforced')
fvBD3 = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', unkMcastAct=u'flood', name=u'DDMY_BD_Server', descr=u'', unkMacUcastAct=u'flood', arpFlood=u'yes', limitIpLearnToSubnets=u'no', llAddr=u'::', mcastAllow=u'no', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'yes', ownerTag=u'', multiDstPktAct=u'bd-flood', type=u'regular', ipLearning=u'yes')
fvBD = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', unkMcastAct=u'flood', name=u'DDMY_BD_Transit', descr=u'', unkMacUcastAct=u'flood', arpFlood=u'yes', limitIpLearnToSubnets=u'no', llAddr=u'::', mcastAllow=u'no', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'no', ownerTag=u'', multiDstPktAct=u'bd-flood', type=u'regular', ipLearning=u'yes')
fvBD2 = cobra.model.fv.BD(fvTenant, ownerKey=u'', vmac=u'not-applicable', unkMcastAct=u'flood', name=u'DDMY_BD_Client', descr=u'', unkMacUcastAct=u'flood', arpFlood=u'yes', limitIpLearnToSubnets=u'no', llAddr=u'::', mcastAllow=u'no', mac=u'00:22:BD:F8:19:FF', epMoveDetectMode=u'', unicastRoute=u'yes', ownerTag=u'', multiDstPktAct=u'bd-flood', type=u'regular', ipLearning=u'yes')


c = cobra.mit.request.ConfigRequest()
c.addMo(fvTenant)
md.commit(c)

print "\n"
print "Tenant, VRF and BD have been created successfully."
print "\n"
raw_input("Hit return to create the EPG, contract, service graph now.") 

fvAp = cobra.model.fv.Ap(fvTenant, ownerKey=u'', prio=u'unspecified', name=u'3TierApp-ANP', descr=u'', ownerTag=u'')
fvAEPg = cobra.model.fv.AEPg(fvAp, isAttrBasedEPg=u'no', matchT=u'AtleastOne', name=u'Web-EPG', prio=u'unspecified', descr=u'', pcEnfPref=u'unenforced')
fvRsBd = cobra.model.fv.RsBd(fvAEPg, tnFvBDName=u'DDMY_BD_Server')

fvRsCons = cobra.model.fv.RsCons(fvAEPg, tnVzBrCPName=u'WebToApp-TnCon', prio=u'unspecified')
fvRsPathAtt = cobra.model.fv.RsPathAtt(fvAEPg, tDn=u'topology/pod-1/protpaths-101-102/pathep-[VPCForPhySvr01]', descr=u'', primaryEncap=u'unknown', instrImedcy=u'lazy', mode=u'untagged', encap=u'vlan-1051')
fvRsDomAtt = cobra.model.fv.RsDomAtt(fvAEPg, tDn=u'uni/phys-BareMetal', primaryEncap=u'unknown', classPref=u'encap', delimiter=u'', instrImedcy=u'lazy', encap=u'unknown', resImedcy=u'lazy')
fvRsDomAtt2 = cobra.model.fv.RsDomAtt(fvAEPg, tDn=u'uni/vmmp-VMware/dom-DD-ACI-vCenter', primaryEncap=u'unknown', classPref=u'encap', delimiter=u'', instrImedcy=u'immediate', encap=u'unknown', resImedcy=u'immediate')

fvRsCustQosPol = cobra.model.fv.RsCustQosPol(fvAEPg, tnQosCustomPolName=u'')
fvCrtrn = cobra.model.fv.Crtrn(fvAEPg, ownerKey=u'', name=u'default', descr=u'', prec=u'0', ownerTag=u'', match=u'any')
vnsFolderInst = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'LocalTraffic', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'LocalTraffic')
vnsFolderInst2 = cobra.model.vns.FolderInst(vnsFolderInst, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Pool', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Pool')
vnsParamInst = cobra.model.vns.ParamInst(vnsFolderInst2, validation=u'', mandatory=u'no', name=u'LBMethod', value=u'ROUND_ROBIN', key=u'LBMethod', locked=u'no', cardinality=u'unspecified')
vnsParamInst2 = cobra.model.vns.ParamInst(vnsFolderInst2, validation=u'', mandatory=u'no', name=u'PoolType', value=u'STATIC', key=u'PoolType', locked=u'no', cardinality=u'unspecified')
vnsFolderInst3 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Member', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Member')
vnsParamInst3 = cobra.model.vns.ParamInst(vnsFolderInst3, validation=u'', mandatory=u'no', name=u'Port', value=u'80', key=u'Port', locked=u'no', cardinality=u'unspecified')
vnsParamInst4 = cobra.model.vns.ParamInst(vnsFolderInst3, validation=u'', mandatory=u'no', name=u'IPAddress', value=u'172.16.33.11', key=u'IPAddress', locked=u'no', cardinality=u'unspecified')
vnsFolderInst4 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Member', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Member2')
vnsParamInst5 = cobra.model.vns.ParamInst(vnsFolderInst4, validation=u'', mandatory=u'no', name=u'Port', value=u'80', key=u'Port', locked=u'no', cardinality=u'unspecified')
vnsParamInst6 = cobra.model.vns.ParamInst(vnsFolderInst4, validation=u'', mandatory=u'no', name=u'IPAddress', value=u'172.16.33.12', key=u'IPAddress', locked=u'no', cardinality=u'unspecified')
vnsFolderInst5 = cobra.model.vns.FolderInst(vnsFolderInst2, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'PoolMonitor', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'PoolMonitor')
vnsCfgRelInst = cobra.model.vns.CfgRelInst(vnsFolderInst5, mandatory=u'no', name=u'PoolMonitorRel', key=u'PoolMonitorRel', locked=u'no', cardinality=u'unspecified', targetName=u'LocalTraffic/Monitor')
vnsFolderInst6 = cobra.model.vns.FolderInst(vnsFolderInst, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Monitor', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Monitor')
vnsParamInst7 = cobra.model.vns.ParamInst(vnsFolderInst6, validation=u'', mandatory=u'no', name=u'FailByAttempts', value=u'3', key=u'FailByAttempts', locked=u'no', cardinality=u'unspecified')
vnsParamInst8 = cobra.model.vns.ParamInst(vnsFolderInst6, validation=u'', mandatory=u'no', name=u'Type', value=u'TCP', key=u'Type', locked=u'no', cardinality=u'unspecified')
vnsParamInst9 = cobra.model.vns.ParamInst(vnsFolderInst6, validation=u'', mandatory=u'no', name=u'FrequencySeconds', value=u'5', key=u'FrequencySeconds', locked=u'no', cardinality=u'unspecified')
vnsFolderInst7 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Pool', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Pool')
vnsCfgRelInst2 = cobra.model.vns.CfgRelInst(vnsFolderInst7, mandatory=u'no', name=u'PoolRel', key=u'PoolRel', locked=u'no', cardinality=u'unspecified', targetName=u'LocalTraffic/Pool')
vnsParamInst10 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'EPGDestinationPort', value=u'80', key=u'EPGDestinationPort', locked=u'no', cardinality=u'unspecified')
vnsParamInst11 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'EPGConnectionLimit', value=u'0', key=u'EPGConnectionLimit', locked=u'no', cardinality=u'unspecified')
vnsParamInst12 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'EPGRatio', value=u'1', key=u'EPGRatio', locked=u'no', cardinality=u'unspecified')
vnsParamInst13 = cobra.model.vns.ParamInst(vnsFolderInst7, validation=u'', mandatory=u'no', name=u'EPGConnectionRateLimit', value=u'0', key=u'EPGConnectionRateLimit', locked=u'no', cardinality=u'unspecified')
vnsFolderInst8 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Interface', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'internalIf')
vnsFolderInst9 = cobra.model.vns.FolderInst(vnsFolderInst8, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'InterfaceConfig', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'internalIfCfg')
vnsCfgRelInst3 = cobra.model.vns.CfgRelInst(vnsFolderInst9, mandatory=u'no', name=u'intbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsParamInst14 = cobra.model.vns.ParamInst(vnsFolderInst9, validation=u'', mandatory=u'no', name=u'internal_security_level', value=u'100', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsFolderInst10 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Network', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Network')
vnsFolderInst11 = cobra.model.vns.FolderInst(vnsFolderInst10, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'ExternalSelfIP', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'ExternalSelfIP')
vnsParamInst15 = cobra.model.vns.ParamInst(vnsFolderInst11, validation=u'', mandatory=u'no', name=u'Floating', value=u'NO', key=u'Floating', locked=u'no', cardinality=u'unspecified')
vnsParamInst16 = cobra.model.vns.ParamInst(vnsFolderInst11, validation=u'', mandatory=u'no', name=u'SelfIPAddress', value=u'172.16.35.253', key=u'SelfIPAddress', locked=u'no', cardinality=u'unspecified')
vnsParamInst17 = cobra.model.vns.ParamInst(vnsFolderInst11, validation=u'', mandatory=u'no', name=u'SelfIPNetmask', value=u'255.255.255.0', key=u'SelfIPNetmask', locked=u'no', cardinality=u'unspecified')
vnsParamInst18 = cobra.model.vns.ParamInst(vnsFolderInst11, validation=u'', mandatory=u'no', name=u'PortLockdown', value=u'DEFAULT', key=u'PortLockdown', locked=u'no', cardinality=u'unspecified')
vnsFolderInst12 = cobra.model.vns.FolderInst(vnsFolderInst10, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'InternalSelfIP', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'InternalSelfIP')
vnsParamInst19 = cobra.model.vns.ParamInst(vnsFolderInst12, validation=u'', mandatory=u'no', name=u'Floating', value=u'NO', key=u'Floating', locked=u'no', cardinality=u'unspecified')
vnsParamInst20 = cobra.model.vns.ParamInst(vnsFolderInst12, validation=u'', mandatory=u'no', name=u'SelfIPAddress', value=u'172.16.33.254', key=u'SelfIPAddress', locked=u'no', cardinality=u'unspecified')
vnsParamInst21 = cobra.model.vns.ParamInst(vnsFolderInst12, validation=u'', mandatory=u'no', name=u'SelfIPNetmask', value=u'255.255.255.0', key=u'SelfIPNetmask', locked=u'no', cardinality=u'unspecified')
vnsParamInst22 = cobra.model.vns.ParamInst(vnsFolderInst12, validation=u'', mandatory=u'no', name=u'PortLockdown', value=u'DEFAULT', key=u'PortLockdown', locked=u'no', cardinality=u'unspecified')
vnsFolderInst13 = cobra.model.vns.FolderInst(vnsFolderInst10, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Route', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Route')
vnsParamInst23 = cobra.model.vns.ParamInst(vnsFolderInst13, validation=u'', mandatory=u'no', name=u'DestinationNetmask', value=u'0.0.0.0', key=u'DestinationNetmask', locked=u'no', cardinality=u'unspecified')
vnsParamInst24 = cobra.model.vns.ParamInst(vnsFolderInst13, validation=u'', mandatory=u'no', name=u'DestinationIPAddress', value=u'0.0.0.0', key=u'DestinationIPAddress', locked=u'no', cardinality=u'unspecified')
vnsParamInst25 = cobra.model.vns.ParamInst(vnsFolderInst13, validation=u'', mandatory=u'no', name=u'NextHopIPAddress', value=u'172.16.35.254', key=u'NextHopIPAddress', locked=u'no', cardinality=u'unspecified')
vnsFolderInst14 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'BridgeGroupIntf', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'1')
vnsParamInst26 = cobra.model.vns.ParamInst(vnsFolderInst14, validation=u'', mandatory=u'no', name=u'ipv6_nd_dad_attempts', value=u'1', key=u'ipv6_nd_dad_attempts', locked=u'no', cardinality=u'unspecified')
vnsFolderInst15 = cobra.model.vns.FolderInst(vnsFolderInst14, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'IPv4Address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'IPv4Address')
vnsParamInst27 = cobra.model.vns.ParamInst(vnsFolderInst15, validation=u'', mandatory=u'no', name=u'ipv4_address', value=u'172.16.35.252/255.255.255.0', key=u'ipv4_address', locked=u'no', cardinality=u'unspecified')
vnsFolderInst16 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Interface', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'externalIf')
vnsFolderInst17 = cobra.model.vns.FolderInst(vnsFolderInst16, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'StaticRoute', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'StaticRoute')
vnsFolderInst18 = cobra.model.vns.FolderInst(vnsFolderInst17, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'route', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'route')
vnsParamInst28 = cobra.model.vns.ParamInst(vnsFolderInst18, validation=u'', mandatory=u'no', name=u'netmask', value=u'0.0.0.0', key=u'netmask', locked=u'no', cardinality=u'unspecified')
vnsParamInst29 = cobra.model.vns.ParamInst(vnsFolderInst18, validation=u'', mandatory=u'no', name=u'network', value=u'0.0.0.0', key=u'network', locked=u'no', cardinality=u'unspecified')
vnsParamInst30 = cobra.model.vns.ParamInst(vnsFolderInst18, validation=u'', mandatory=u'no', name=u'gateway', value=u'172.16.35.254', key=u'gateway', locked=u'no', cardinality=u'unspecified')
vnsFolderInst19 = cobra.model.vns.FolderInst(vnsFolderInst16, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'InterfaceConfig', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'externalIfCfg')
vnsCfgRelInst4 = cobra.model.vns.CfgRelInst(vnsFolderInst19, mandatory=u'no', name=u'extbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsParamInst31 = cobra.model.vns.ParamInst(vnsFolderInst19, validation=u'', mandatory=u'no', name=u'external_security_level', value=u'0', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsFolderInst20 = cobra.model.vns.FolderInst(vnsFolderInst16, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'AccessGroup', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'ExtAccessGroup')
vnsCfgRelInst5 = cobra.model.vns.CfgRelInst(vnsFolderInst20, mandatory=u'no', name=u'name', key=u'inbound_access_list_name', locked=u'no', cardinality=u'unspecified', targetName=u'access-list-inbound')
vnsFolderInst21 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'AccessList', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'access-list-inbound')
vnsFolderInst22 = cobra.model.vns.FolderInst(vnsFolderInst21, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'permit-https')
vnsParamInst32 = cobra.model.vns.ParamInst(vnsFolderInst22, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsParamInst33 = cobra.model.vns.ParamInst(vnsFolderInst22, validation=u'', mandatory=u'no', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsFolderInst23 = cobra.model.vns.FolderInst(vnsFolderInst22, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'destination_service', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-service')
vnsParamInst34 = cobra.model.vns.ParamInst(vnsFolderInst23, validation=u'', mandatory=u'no', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsParamInst35 = cobra.model.vns.ParamInst(vnsFolderInst23, validation=u'', mandatory=u'no', name=u'port', value=u'https', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsFolderInst24 = cobra.model.vns.FolderInst(vnsFolderInst22, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'src-address')
vnsParamInst36 = cobra.model.vns.ParamInst(vnsFolderInst24, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst25 = cobra.model.vns.FolderInst(vnsFolderInst22, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-address')
vnsParamInst37 = cobra.model.vns.ParamInst(vnsFolderInst25, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst26 = cobra.model.vns.FolderInst(vnsFolderInst22, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'tcp')
vnsParamInst38 = cobra.model.vns.ParamInst(vnsFolderInst26, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsFolderInst27 = cobra.model.vns.FolderInst(vnsFolderInst21, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'permit-icmp')
vnsParamInst39 = cobra.model.vns.ParamInst(vnsFolderInst27, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsParamInst40 = cobra.model.vns.ParamInst(vnsFolderInst27, validation=u'', mandatory=u'no', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsFolderInst28 = cobra.model.vns.FolderInst(vnsFolderInst27, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'destination_address')
vnsParamInst41 = cobra.model.vns.ParamInst(vnsFolderInst28, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst29 = cobra.model.vns.FolderInst(vnsFolderInst27, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'protocol')
vnsParamInst42 = cobra.model.vns.ParamInst(vnsFolderInst29, validation=u'', mandatory=u'no', name=u'icmp', value=u'icmp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsFolderInst30 = cobra.model.vns.FolderInst(vnsFolderInst27, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'source_address')
vnsParamInst43 = cobra.model.vns.ParamInst(vnsFolderInst30, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst31 = cobra.model.vns.FolderInst(vnsFolderInst21, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'AccessControlEntry', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'permit-http')
vnsParamInst44 = cobra.model.vns.ParamInst(vnsFolderInst31, validation=u'', mandatory=u'no', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsParamInst45 = cobra.model.vns.ParamInst(vnsFolderInst31, validation=u'', mandatory=u'no', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsFolderInst32 = cobra.model.vns.FolderInst(vnsFolderInst31, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'destination_service', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-service')
vnsParamInst46 = cobra.model.vns.ParamInst(vnsFolderInst32, validation=u'', mandatory=u'no', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsParamInst47 = cobra.model.vns.ParamInst(vnsFolderInst32, validation=u'', mandatory=u'no', name=u'port', value=u'http', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsFolderInst33 = cobra.model.vns.FolderInst(vnsFolderInst31, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'source_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'src-address')
vnsParamInst48 = cobra.model.vns.ParamInst(vnsFolderInst33, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst34 = cobra.model.vns.FolderInst(vnsFolderInst31, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'destination_address', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'dest-address')
vnsParamInst49 = cobra.model.vns.ParamInst(vnsFolderInst34, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsFolderInst35 = cobra.model.vns.FolderInst(vnsFolderInst31, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'protocol', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'tcp')
vnsParamInst50 = cobra.model.vns.ParamInst(vnsFolderInst35, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsFolderInst36 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'ExIntfConfigRelFolder', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'ExtConfig')
vnsCfgRelInst6 = cobra.model.vns.CfgRelInst(vnsFolderInst36, mandatory=u'no', name=u'ExtConfigrel', key=u'ExIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'externalIf')
vnsFolderInst37 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'InIntfConfigRelFolder', cardinality=u'unspecified', nodeNameOrLbl=u'Firewall', name=u'IntConfig')
vnsCfgRelInst7 = cobra.model.vns.CfgRelInst(vnsFolderInst37, mandatory=u'no', name=u'InConfigrel', key=u'InIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'internalIf')
vnsFolderInst38 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'Listener', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'Listener')
vnsParamInst51 = cobra.model.vns.ParamInst(vnsFolderInst38, validation=u'', mandatory=u'no', name=u'DestinationPort', value=u'80', key=u'DestinationPort', locked=u'no', cardinality=u'unspecified')
vnsParamInst52 = cobra.model.vns.ParamInst(vnsFolderInst38, validation=u'', mandatory=u'no', name=u'Protocol', value=u'TCP', key=u'Protocol', locked=u'no', cardinality=u'unspecified')
vnsParamInst53 = cobra.model.vns.ParamInst(vnsFolderInst38, validation=u'', mandatory=u'no', name=u'DestinationNetmask', value=u'255.255.255.255', key=u'DestinationNetmask', locked=u'no', cardinality=u'unspecified')
vnsParamInst54 = cobra.model.vns.ParamInst(vnsFolderInst38, validation=u'', mandatory=u'no', name=u'DestinationIPAddress', value=u'172.16.35.10', key=u'DestinationIPAddress', locked=u'no', cardinality=u'unspecified')
vnsFolderInst39 = cobra.model.vns.FolderInst(fvAEPg, locked=u'no', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', devCtxLbl=u'', ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', scopedBy=u'epg', key=u'NetworkRelation', cardinality=u'unspecified', nodeNameOrLbl=u'ADC', name=u'NetworkRelation')
vnsCfgRelInst8 = cobra.model.vns.CfgRelInst(vnsFolderInst39, mandatory=u'no', name=u'NetworkRel', key=u'NetworkRel', locked=u'no', cardinality=u'unspecified', targetName=u'Network')
fvRsProv = cobra.model.fv.RsProv(fvAEPg, tnVzBrCPName=u'ExtToWeb-TnCon', matchT=u'AtleastOne', prio=u'unspecified')
fvRsProv2 = cobra.model.fv.RsProv(fvAEPg, tnVzBrCPName=u'ExtToWeb-TnCon-ASAvAndADC', matchT=u'AtleastOne', prio=u'unspecified')
fvAEPg2 = cobra.model.fv.AEPg(fvAp, isAttrBasedEPg=u'no', matchT=u'AtleastOne', name=u'App-EPG', prio=u'unspecified', descr=u'', pcEnfPref=u'unenforced')
fvRsCons2 = cobra.model.fv.RsCons(fvAEPg2, tnVzBrCPName=u'AppToDB-TnCon', prio=u'unspecified')
fvRsDomAtt3 = cobra.model.fv.RsDomAtt(fvAEPg2, tDn=u'uni/vmmp-VMware/dom-DD-ACI-vCenter', primaryEncap=u'unknown', classPref=u'encap', delimiter=u'', instrImedcy=u'immediate', encap=u'unknown', resImedcy=u'immediate')
fvRsBd2 = cobra.model.fv.RsBd(fvAEPg2, tnFvBDName=u'DDMY_BD_Server')
fvRsCustQosPol2 = cobra.model.fv.RsCustQosPol(fvAEPg2, tnQosCustomPolName=u'')
fvCrtrn2 = cobra.model.fv.Crtrn(fvAEPg2, ownerKey=u'', name=u'default', descr=u'', prec=u'0', ownerTag=u'', match=u'any')
fvRsProv3 = cobra.model.fv.RsProv(fvAEPg2, tnVzBrCPName=u'WebToApp-TnCon', matchT=u'AtleastOne', prio=u'unspecified')
fvAEPg3 = cobra.model.fv.AEPg(fvAp, isAttrBasedEPg=u'no', matchT=u'AtleastOne', name=u'DB-EPG', prio=u'unspecified', descr=u'', pcEnfPref=u'unenforced')
fvRsDomAtt4 = cobra.model.fv.RsDomAtt(fvAEPg3, tDn=u'uni/vmmp-VMware/dom-DD-ACI-vCenter', primaryEncap=u'unknown', classPref=u'encap', delimiter=u'', instrImedcy=u'immediate', encap=u'unknown', resImedcy=u'immediate')
fvRsBd3 = cobra.model.fv.RsBd(fvAEPg3, tnFvBDName=u'DDMY_BD_Server')
fvRsCustQosPol3 = cobra.model.fv.RsCustQosPol(fvAEPg3, tnQosCustomPolName=u'')
fvCrtrn3 = cobra.model.fv.Crtrn(fvAEPg3, ownerKey=u'', name=u'default', descr=u'', prec=u'0', ownerTag=u'', match=u'any')
fvRsProv4 = cobra.model.fv.RsProv(fvAEPg3, tnVzBrCPName=u'AppToDB-TnCon', matchT=u'AtleastOne', prio=u'unspecified')

fvRsBDToNdP = cobra.model.fv.RsBDToNdP(fvBD, tnNdIfPolName=u'')
fvRsCtx = cobra.model.fv.RsCtx(fvBD, tnFvCtxName=u'DDMY_VRF')
fvRsIgmpsn = cobra.model.fv.RsIgmpsn(fvBD, tnIgmpSnoopPolName=u'')
fvRsBdToEpRet = cobra.model.fv.RsBdToEpRet(fvBD, resolveAct=u'resolve', tnFvEpRetPolName=u'')

fvRsBDToNdP2 = cobra.model.fv.RsBDToNdP(fvBD2, tnNdIfPolName=u'')
fvRsBDToOut = cobra.model.fv.RsBDToOut(fvBD2, tnL3extOutName=u'DDMY_L3Out_OSPF')
fvRsCtx2 = cobra.model.fv.RsCtx(fvBD2, tnFvCtxName=u'DDMY_VRF')
fvRsIgmpsn2 = cobra.model.fv.RsIgmpsn(fvBD2, tnIgmpSnoopPolName=u'')
fvSubnet = cobra.model.fv.Subnet(fvBD2, name=u'', descr=u'', ctrl=u'', ip=u'172.16.35.254/24', preferred=u'no', scope=u'public', virtual=u'no')
fvRsBdToEpRet2 = cobra.model.fv.RsBdToEpRet(fvBD2, resolveAct=u'resolve', tnFvEpRetPolName=u'')

fvRsBDToNdP3 = cobra.model.fv.RsBDToNdP(fvBD3, tnNdIfPolName=u'')
fvRsCtx3 = cobra.model.fv.RsCtx(fvBD3, tnFvCtxName=u'DDMY_VRF')
fvRsIgmpsn3 = cobra.model.fv.RsIgmpsn(fvBD3, tnIgmpSnoopPolName=u'')
fvSubnet2 = cobra.model.fv.Subnet(fvBD3, name=u'', descr=u'', ctrl=u'', ip=u'172.16.33.253/24', preferred=u'no', virtual=u'no')
fvRsBdToEpRet3 = cobra.model.fv.RsBdToEpRet(fvBD3, resolveAct=u'resolve', tnFvEpRetPolName=u'')
vnsAbsGraph = cobra.model.vns.AbsGraph(fvTenant, uiTemplateType=u'TWO_NODE_FW_TRANS_ADC_TWO_ARM', ownerKey=u'', name=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', descr=u'', ownerTag=u'')
vnsAbsTermNodeCon = cobra.model.vns.AbsTermNodeCon(vnsAbsGraph, ownerKey=u'', name=u'T1', descr=u'', ownerTag=u'')
vnsAbsTermConn = cobra.model.vns.AbsTermConn(vnsAbsTermNodeCon, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm = cobra.model.vns.InTerm(vnsAbsTermNodeCon, name=u'input-terminal', descr=u'')
vnsOutTerm = cobra.model.vns.OutTerm(vnsAbsTermNodeCon, name=u'output-terminal', descr=u'')
vnsAbsTermNodeProv = cobra.model.vns.AbsTermNodeProv(vnsAbsGraph, ownerKey=u'', name=u'T2', descr=u'', ownerTag=u'')
vnsAbsTermConn2 = cobra.model.vns.AbsTermConn(vnsAbsTermNodeProv, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm2 = cobra.model.vns.InTerm(vnsAbsTermNodeProv, name=u'input-terminal', descr=u'')
vnsOutTerm2 = cobra.model.vns.OutTerm(vnsAbsTermNodeProv, name=u'output-terminal', descr=u'')
vnsAbsConnection = cobra.model.vns.AbsConnection(vnsAbsGraph, adjType=u'L3', ownerKey=u'', name=u'C1', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'yes', ownerTag=u'', directConnect=u'no')
vnsRsAbsConnectionConns = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsTermNodeCon-T1/AbsTConn')
vnsRsAbsConnectionConns2 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsNode-Firewall/AbsFConn-external')
vnsAbsConnection2 = cobra.model.vns.AbsConnection(vnsAbsGraph, adjType=u'L2', ownerKey=u'', name=u'C2', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'no', ownerTag=u'', directConnect=u'no')
vnsRsAbsConnectionConns3 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection2, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsNode-Firewall/AbsFConn-internal')
vnsRsAbsConnectionConns4 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection2, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsNode-ADC/AbsFConn-external')
vnsAbsConnection3 = cobra.model.vns.AbsConnection(vnsAbsGraph, adjType=u'L2', ownerKey=u'', name=u'C3', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'yes', ownerTag=u'', directConnect=u'no')
vnsRsAbsConnectionConns5 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection3, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsNode-ADC/AbsFConn-internal')
vnsRsAbsConnectionConns6 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection3, tDn=u'uni/tn-DDMY/AbsGraph-ASAv_Transparent_and_F5BIGIP5250_Two-Arm/AbsTermNodeProv-T2/AbsTConn')
vnsAbsNode = cobra.model.vns.AbsNode(vnsAbsGraph, funcTemplateType=u'FW_TRANS', isCopy=u'no', ownerKey=u'', managed=u'yes', name=u'Firewall', descr=u'', funcType=u'GoThrough', shareEncap=u'no', sequenceNumber=u'0', routingMode=u'unspecified', ownerTag=u'')
vnsAbsFuncConn = cobra.model.vns.AbsFuncConn(vnsAbsNode, ownerKey=u'', attNotify=u'no', name=u'external', descr=u'', ownerTag=u'')
vnsRsMConnAtt = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-external')
vnsAbsFuncConn2 = cobra.model.vns.AbsFuncConn(vnsAbsNode, ownerKey=u'', attNotify=u'no', name=u'internal', descr=u'', ownerTag=u'')
vnsRsMConnAtt2 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn2, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-internal')
vnsRsNodeToAbsFuncProf = cobra.model.vns.RsNodeToAbsFuncProf(vnsAbsNode, tDn=u'uni/tn-DDMY/absFuncProfContr/absFuncProfGrp-PermitHost/absFuncProf-PermitHost')
vnsRsNodeToMFunc = cobra.model.vns.RsNodeToMFunc(vnsAbsNode, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall')
vnsAbsNode2 = cobra.model.vns.AbsNode(vnsAbsGraph, funcTemplateType=u'ADC_TWO_ARM', isCopy=u'no', ownerKey=u'', managed=u'yes', name=u'ADC', descr=u'', funcType=u'GoTo', shareEncap=u'no', sequenceNumber=u'0', routingMode=u'unspecified', ownerTag=u'')
vnsAbsFuncConn3 = cobra.model.vns.AbsFuncConn(vnsAbsNode2, ownerKey=u'', attNotify=u'no', name=u'external', descr=u'', ownerTag=u'')
vnsRsMConnAtt3 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn3, tDn=u'uni/infra/mDev-F5-BIGIP-1.2.0/mFunc-Virtual-Server/mConn-external')
vnsAbsFuncConn4 = cobra.model.vns.AbsFuncConn(vnsAbsNode2, ownerKey=u'', attNotify=u'no', name=u'internal', descr=u'', ownerTag=u'')
vnsRsMConnAtt4 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn4, tDn=u'uni/infra/mDev-F5-BIGIP-1.2.0/mFunc-Virtual-Server/mConn-internal')
vnsRsNodeToAbsFuncProf2 = cobra.model.vns.RsNodeToAbsFuncProf(vnsAbsNode2, tDn=u'uni/tn-DDMY/absFuncProfContr/absFuncProfGrp-F5BIGIP5250/absFuncProf-F5BIGIP5250')
vnsRsNodeToMFunc2 = cobra.model.vns.RsNodeToMFunc(vnsAbsNode2, tDn=u'uni/infra/mDev-F5-BIGIP-1.2.0/mFunc-Virtual-Server')
vnsAbsGraph2 = cobra.model.vns.AbsGraph(fvTenant, uiTemplateType=u'ONE_NODE_FW_TRANS', ownerKey=u'', name=u'ASAvServiceGraph', descr=u'', ownerTag=u'')
vnsAbsTermNodeCon2 = cobra.model.vns.AbsTermNodeCon(vnsAbsGraph2, ownerKey=u'', name=u'T1', descr=u'', ownerTag=u'')
vnsAbsTermConn3 = cobra.model.vns.AbsTermConn(vnsAbsTermNodeCon2, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm3 = cobra.model.vns.InTerm(vnsAbsTermNodeCon2, name=u'input-terminal', descr=u'')
vnsOutTerm3 = cobra.model.vns.OutTerm(vnsAbsTermNodeCon2, name=u'output-terminal', descr=u'')
vnsAbsTermNodeProv2 = cobra.model.vns.AbsTermNodeProv(vnsAbsGraph2, ownerKey=u'', name=u'T2', descr=u'', ownerTag=u'')
vnsAbsTermConn4 = cobra.model.vns.AbsTermConn(vnsAbsTermNodeProv2, ownerKey=u'', attNotify=u'no', name=u'1', descr=u'', ownerTag=u'')
vnsInTerm4 = cobra.model.vns.InTerm(vnsAbsTermNodeProv2, name=u'input-terminal', descr=u'')
vnsOutTerm4 = cobra.model.vns.OutTerm(vnsAbsTermNodeProv2, name=u'output-terminal', descr=u'')
vnsAbsConnection4 = cobra.model.vns.AbsConnection(vnsAbsGraph2, adjType=u'L2', ownerKey=u'', name=u'C1', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'no', ownerTag=u'', directConnect=u'no')
vnsRsAbsConnectionConns7 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection4, tDn=u'uni/tn-DDMY/AbsGraph-ASAvServiceGraph/AbsNode-Firewall/AbsFConn-external')
vnsRsAbsConnectionConns8 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection4, tDn=u'uni/tn-DDMY/AbsGraph-ASAvServiceGraph/AbsTermNodeCon-T1/AbsTConn')
vnsAbsConnection5 = cobra.model.vns.AbsConnection(vnsAbsGraph2, adjType=u'L2', ownerKey=u'', name=u'C2', descr=u'', connDir=u'provider', connType=u'external', unicastRoute=u'no', ownerTag=u'', directConnect=u'no')
vnsRsAbsConnectionConns9 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection5, tDn=u'uni/tn-DDMY/AbsGraph-ASAvServiceGraph/AbsNode-Firewall/AbsFConn-internal')
vnsRsAbsConnectionConns10 = cobra.model.vns.RsAbsConnectionConns(vnsAbsConnection5, tDn=u'uni/tn-DDMY/AbsGraph-ASAvServiceGraph/AbsTermNodeProv-T2/AbsTConn')
vnsAbsNode3 = cobra.model.vns.AbsNode(vnsAbsGraph2, funcTemplateType=u'OTHER', isCopy=u'no', ownerKey=u'', managed=u'yes', name=u'Firewall', descr=u'', funcType=u'GoThrough', shareEncap=u'no', sequenceNumber=u'0', routingMode=u'unspecified', ownerTag=u'')
vnsAbsFuncConn5 = cobra.model.vns.AbsFuncConn(vnsAbsNode3, ownerKey=u'', attNotify=u'no', name=u'external', descr=u'', ownerTag=u'')
vnsRsMConnAtt5 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn5, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-external')
vnsAbsFuncConn6 = cobra.model.vns.AbsFuncConn(vnsAbsNode3, ownerKey=u'', attNotify=u'no', name=u'internal', descr=u'', ownerTag=u'')
vnsRsMConnAtt6 = cobra.model.vns.RsMConnAtt(vnsAbsFuncConn6, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall/mConn-internal')
vnsRsNodeToAbsFuncProf3 = cobra.model.vns.RsNodeToAbsFuncProf(vnsAbsNode3, tDn=u'uni/tn-DDMY/absFuncProfContr/absFuncProfGrp-ASAvTransparent/absFuncProf-ASAvTransparent')
vnsRsNodeToMFunc3 = cobra.model.vns.RsNodeToMFunc(vnsAbsNode3, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall')
vzFilter = cobra.model.vz.Filter(fvTenant, ownerKey=u'', name=u'App-flt', descr=u'', ownerTag=u'')
vzEntry = cobra.model.vz.Entry(vzFilter, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'smtp', descr=u'', matchDscp=u'unspecified', prot=u'tcp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'smtp', name=u'App-SMTP')
vzEntry2 = cobra.model.vz.Entry(vzFilter, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'http', descr=u'', matchDscp=u'unspecified', prot=u'tcp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'http', name=u'App-HTTP')
vzFilter2 = cobra.model.vz.Filter(fvTenant, ownerKey=u'', name=u'DB-flt', descr=u'', ownerTag=u'')
vzEntry3 = cobra.model.vz.Entry(vzFilter2, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'3306', descr=u'', matchDscp=u'unspecified', prot=u'tcp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'3306', name=u'DB-SQL')
vzFilter3 = cobra.model.vz.Filter(fvTenant, ownerKey=u'', name=u'Web-flt', descr=u'', ownerTag=u'')
vzEntry4 = cobra.model.vz.Entry(vzFilter3, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'unspecified', descr=u'', matchDscp=u'unspecified', prot=u'icmp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'unspecified', name=u'Web-ICMP')
vzEntry5 = cobra.model.vz.Entry(vzFilter3, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'http', descr=u'', matchDscp=u'unspecified', prot=u'tcp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'http', name=u'Web-HTTP')
vzFilter4 = cobra.model.vz.Filter(fvTenant, ownerKey=u'', name=u'Ext-flt', descr=u'', ownerTag=u'')
vzEntry6 = cobra.model.vz.Entry(vzFilter4, tcpRules=u'', arpOpc=u'unspecified', applyToFrag=u'no', dToPort=u'unspecified', descr=u'', matchDscp=u'unspecified', prot=u'icmp', icmpv4T=u'unspecified', sFromPort=u'unspecified', stateful=u'no', icmpv6T=u'unspecified', sToPort=u'unspecified', etherT=u'ip', dFromPort=u'unspecified', name=u'Ext-ICMP')
drawCont = cobra.model.draw.Cont(fvTenant)
drawInst = cobra.model.draw.Inst(drawCont, info=u"{'epg-L3Out-OSPF-EPG-extInst-cloud':{'x':38,'y':11},'epg-L2Out-EPG-extInst-cloud':{'x':16,'y':469},'epg-DB-EPG-undefined':{'x':1051,'y':106},'ctrct_consumer-AppToDB-TnCon-undefined':{'x':804,'y':384},'epg-App-EPG-undefined':{'x':624,'y':83},'ctrct_consumer-WebToApp-TnCon-undefined':{'x':497,'y':361},'ctrct_provider-ExtToWeb-TnCon-ASAvAndADC-undefined':{'x':226,'y':8},'ctrct_provider-ExtToWeb-TnCon-undefined':{'x':159,'y':375},'epg-Web-EPG-undefined':{'x':298,'y':244}}", oDn=u'uni/tn-DDMY/ap-3TierApp-ANP')
vzBrCP = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'AppToDB-TnCon', prio=u'unspecified', targetDscp=u'unspecified', ownerTag=u'', descr=u'')
vzSubj = cobra.model.vz.Subj(vzBrCP, revFltPorts=u'yes', name=u'DB-BiSbj', prio=u'unspecified', targetDscp=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt = cobra.model.vz.RsSubjFiltAtt(vzSubj, directives=u'', tnVzFilterName=u'DB-flt')
vzBrCP2 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'WebToApp-TnCon', prio=u'unspecified', targetDscp=u'unspecified', ownerTag=u'', descr=u'')
vzSubj2 = cobra.model.vz.Subj(vzBrCP2, revFltPorts=u'yes', name=u'App-BiSbj', prio=u'unspecified', targetDscp=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt2 = cobra.model.vz.RsSubjFiltAtt(vzSubj2, directives=u'', tnVzFilterName=u'App-flt')
vzBrCP3 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'ExtToWeb-TnCon', prio=u'unspecified', targetDscp=u'unspecified', ownerTag=u'', descr=u'')
vzSubj3 = cobra.model.vz.Subj(vzBrCP3, revFltPorts=u'yes', name=u'Web-BiSbj', prio=u'unspecified', targetDscp=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt3 = cobra.model.vz.RsSubjFiltAtt(vzSubj3, directives=u'', tnVzFilterName=u'Web-flt')
vzBrCP4 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'WebToExt-TnCon', prio=u'unspecified', targetDscp=u'unspecified', ownerTag=u'', descr=u'')
vzSubj4 = cobra.model.vz.Subj(vzBrCP4, revFltPorts=u'yes', name=u'Ext-BiSbj', prio=u'unspecified', targetDscp=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt4 = cobra.model.vz.RsSubjFiltAtt(vzSubj4, directives=u'', tnVzFilterName=u'Ext-flt')
vzBrCP5 = cobra.model.vz.BrCP(fvTenant, ownerKey=u'', name=u'ExtToWeb-TnCon-ASAvAndADC', prio=u'unspecified', targetDscp=u'unspecified', ownerTag=u'', descr=u'')
vzSubj5 = cobra.model.vz.Subj(vzBrCP5, revFltPorts=u'yes', name=u'Subject', prio=u'unspecified', targetDscp=u'unspecified', descr=u'', consMatchT=u'AtleastOne', provMatchT=u'AtleastOne')
vzRsSubjFiltAtt5 = cobra.model.vz.RsSubjFiltAtt(vzSubj5, directives=u'', tnVzFilterName=u'default')
vzRsSubjGraphAtt = cobra.model.vz.RsSubjGraphAtt(vzSubj5, directives=u'', tnVnsAbsGraphName=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm')
l2extOut = cobra.model.l2ext.Out(fvTenant, ownerKey=u'', targetDscp=u'unspecified', name=u'DDMY_L2Out', descr=u'', ownerTag=u'')
l2extLNodeP = cobra.model.l2ext.LNodeP(l2extOut, ownerKey=u'', tag=u'yellow-green', name=u'L2Out-Node', descr=u'', ownerTag=u'')
l2extLIfP = cobra.model.l2ext.LIfP(l2extLNodeP, ownerKey=u'', tag=u'yellow-green', name=u'L2Out-Interface', descr=u'', ownerTag=u'')
l2extRsPathL2OutAtt = cobra.model.l2ext.RsPathL2OutAtt(l2extLIfP, tDn=u'topology/pod-1/protpaths-101-102/pathep-[VPCForL2Out]', descr=u'', targetDscp=u'unspecified')
l2extRsL2DomAtt = cobra.model.l2ext.RsL2DomAtt(l2extOut, tDn=u'uni/l2dom-L2Out-Domain')
l2extRsEBd = cobra.model.l2ext.RsEBd(l2extOut, encap=u'vlan-1111', tnFvBDName=u'DDMY_BD_Server')
l2extInstP = cobra.model.l2ext.InstP(l2extOut, prio=u'unspecified', matchT=u'AtleastOne', name=u'L2Out-EPG', descr=u'', targetDscp=u'unspecified')
fvRsCons3 = cobra.model.fv.RsCons(l2extInstP, tnVzBrCPName=u'ExtToWeb-TnCon', prio=u'unspecified')
fvRsCustQosPol4 = cobra.model.fv.RsCustQosPol(l2extInstP, tnQosCustomPolName=u'')
ospfIfPol = cobra.model.ospf.IfPol(fvTenant, nwT=u'p2p', pfxSuppress=u'inherit', ownerKey=u'', name=u'OSPF-P2P', descr=u'', ctrl=u'advert-subnet', helloIntvl=u'10', rexmitIntvl=u'5', xmitDelay=u'1', cost=u'unspecified', ownerTag=u'', prio=u'1', deadIntvl=u'40')
vnsLDevIf = cobra.model.vns.LDevIf(fvTenant, description=u'', name=u'', ldev=u'uni/tn-common/lDevVip-F5BIGIP5250')
vnsLDevIf2 = cobra.model.vns.LDevIf(fvTenant, description=u'', name=u'', ldev=u'uni/tn-common/lDevVip-ASAv_Transparent')
fvRsTenantMonPol = cobra.model.fv.RsTenantMonPol(fvTenant, tnMonEPGPolName=u'')
vnsAbsFuncProfContr = cobra.model.vns.AbsFuncProfContr(fvTenant, ownerKey=u'', name=u'', descr=u'', ownerTag=u'')
vnsAbsFuncProfGrp = cobra.model.vns.AbsFuncProfGrp(vnsAbsFuncProfContr, ownerKey=u'', name=u'F5BIGIP5250', descr=u'', ownerTag=u'')
vnsAbsFuncProf = cobra.model.vns.AbsFuncProf(vnsAbsFuncProfGrp, ownerKey=u'', name=u'F5BIGIP5250', descr=u'', ownerTag=u'')
vnsRsProfToMFunc = cobra.model.vns.RsProfToMFunc(vnsAbsFuncProf, tDn=u'uni/infra/mDev-F5-BIGIP-1.2.0/mFunc-Virtual-Server')
vnsAbsDevCfg = cobra.model.vns.AbsDevCfg(vnsAbsFuncProf, ownerKey=u'', name=u'devConfig', descr=u'', ownerTag=u'')
vnsAbsFolder = cobra.model.vns.AbsFolder(vnsAbsDevCfg, locked=u'no', name=u'Network', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Network', cardinality=u'unspecified')
vnsAbsFolder2 = cobra.model.vns.AbsFolder(vnsAbsFolder, locked=u'no', name=u'InternalSelfIP', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InternalSelfIP', cardinality=u'unspecified')
vnsAbsParam = cobra.model.vns.AbsParam(vnsAbsFolder2, validation=u'', mandatory=u'no', name=u'Floating', value=u'NO', key=u'Floating', locked=u'no', cardinality=u'unspecified')
vnsAbsParam2 = cobra.model.vns.AbsParam(vnsAbsFolder2, validation=u'', mandatory=u'yes', name=u'SelfIPAddress', value=u'172.16.33.254', key=u'SelfIPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam3 = cobra.model.vns.AbsParam(vnsAbsFolder2, validation=u'', mandatory=u'yes', name=u'PortLockdown', value=u'DEFAULT', key=u'PortLockdown', locked=u'no', cardinality=u'unspecified')
vnsAbsParam4 = cobra.model.vns.AbsParam(vnsAbsFolder2, validation=u'', mandatory=u'yes', name=u'SelfIPNetmask', value=u'255.255.255.0', key=u'SelfIPNetmask', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder3 = cobra.model.vns.AbsFolder(vnsAbsFolder, locked=u'no', name=u'Route', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Route', cardinality=u'unspecified')
vnsAbsParam5 = cobra.model.vns.AbsParam(vnsAbsFolder3, validation=u'', mandatory=u'yes', name=u'DestinationIPAddress', value=u'0.0.0.0', key=u'DestinationIPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam6 = cobra.model.vns.AbsParam(vnsAbsFolder3, validation=u'', mandatory=u'yes', name=u'DestinationNetmask', value=u'0.0.0.0', key=u'DestinationNetmask', locked=u'no', cardinality=u'unspecified')
vnsAbsParam7 = cobra.model.vns.AbsParam(vnsAbsFolder3, validation=u'', mandatory=u'yes', name=u'NextHopIPAddress', value=u'172.16.35.254', key=u'NextHopIPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder4 = cobra.model.vns.AbsFolder(vnsAbsFolder, locked=u'no', name=u'ExternalSelfIP', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'ExternalSelfIP', cardinality=u'unspecified')
vnsAbsParam8 = cobra.model.vns.AbsParam(vnsAbsFolder4, validation=u'', mandatory=u'no', name=u'Floating', value=u'NO', key=u'Floating', locked=u'no', cardinality=u'unspecified')
vnsAbsParam9 = cobra.model.vns.AbsParam(vnsAbsFolder4, validation=u'', mandatory=u'yes', name=u'SelfIPAddress', value=u'172.16.35.253', key=u'SelfIPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam10 = cobra.model.vns.AbsParam(vnsAbsFolder4, validation=u'', mandatory=u'yes', name=u'PortLockdown', value=u'DEFAULT', key=u'PortLockdown', locked=u'no', cardinality=u'unspecified')
vnsAbsParam11 = cobra.model.vns.AbsParam(vnsAbsFolder4, validation=u'', mandatory=u'yes', name=u'SelfIPNetmask', value=u'255.255.255.0', key=u'SelfIPNetmask', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder5 = cobra.model.vns.AbsFolder(vnsAbsDevCfg, locked=u'no', name=u'LocalTraffic', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'LocalTraffic', cardinality=u'unspecified')
vnsAbsFolder6 = cobra.model.vns.AbsFolder(vnsAbsFolder5, locked=u'no', name=u'Pool', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Pool', cardinality=u'unspecified')
vnsAbsParam12 = cobra.model.vns.AbsParam(vnsAbsFolder6, validation=u'', mandatory=u'no', name=u'PoolType', value=u'STATIC', key=u'PoolType', locked=u'no', cardinality=u'unspecified')
vnsAbsParam13 = cobra.model.vns.AbsParam(vnsAbsFolder6, validation=u'', mandatory=u'yes', name=u'LBMethod', value=u'ROUND_ROBIN', key=u'LBMethod', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder7 = cobra.model.vns.AbsFolder(vnsAbsFolder6, locked=u'no', name=u'Member2', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Member', cardinality=u'unspecified')
vnsAbsParam14 = cobra.model.vns.AbsParam(vnsAbsFolder7, validation=u'', mandatory=u'yes', name=u'IPAddress', value=u'172.16.33.12', key=u'IPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam15 = cobra.model.vns.AbsParam(vnsAbsFolder7, validation=u'', mandatory=u'yes', name=u'Port', value=u'80', key=u'Port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder8 = cobra.model.vns.AbsFolder(vnsAbsFolder6, locked=u'no', name=u'Member', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Member', cardinality=u'unspecified')
vnsAbsParam16 = cobra.model.vns.AbsParam(vnsAbsFolder8, validation=u'', mandatory=u'yes', name=u'IPAddress', value=u'172.16.33.11', key=u'IPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam17 = cobra.model.vns.AbsParam(vnsAbsFolder8, validation=u'', mandatory=u'yes', name=u'Port', value=u'80', key=u'Port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder9 = cobra.model.vns.AbsFolder(vnsAbsFolder6, locked=u'no', name=u'PoolMonitor', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'PoolMonitor', cardinality=u'unspecified')
vnsAbsCfgRel = cobra.model.vns.AbsCfgRel(vnsAbsFolder9, mandatory=u'no', name=u'PoolMonitorRel', key=u'PoolMonitorRel', locked=u'no', cardinality=u'unspecified', targetName=u'LocalTraffic/Monitor')
vnsAbsFolder10 = cobra.model.vns.AbsFolder(vnsAbsFolder5, locked=u'no', name=u'Monitor', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Monitor', cardinality=u'unspecified')
vnsAbsParam18 = cobra.model.vns.AbsParam(vnsAbsFolder10, validation=u'', mandatory=u'yes', name=u'Type', value=u'TCP', key=u'Type', locked=u'no', cardinality=u'unspecified')
vnsAbsParam19 = cobra.model.vns.AbsParam(vnsAbsFolder10, validation=u'', mandatory=u'yes', name=u'FailByAttempts', value=u'3', key=u'FailByAttempts', locked=u'no', cardinality=u'unspecified')
vnsAbsParam20 = cobra.model.vns.AbsParam(vnsAbsFolder10, validation=u'', mandatory=u'yes', name=u'FrequencySeconds', value=u'5', key=u'FrequencySeconds', locked=u'no', cardinality=u'unspecified')
vnsAbsFuncCfg = cobra.model.vns.AbsFuncCfg(vnsAbsFuncProf, ownerKey=u'', name=u'funcConfig', descr=u'', ownerTag=u'')
vnsAbsFolder11 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg, locked=u'no', name=u'Listener', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Listener', cardinality=u'unspecified')
vnsAbsParam21 = cobra.model.vns.AbsParam(vnsAbsFolder11, validation=u'', mandatory=u'yes', name=u'DestinationIPAddress', value=u'172.16.35.10', key=u'DestinationIPAddress', locked=u'no', cardinality=u'unspecified')
vnsAbsParam22 = cobra.model.vns.AbsParam(vnsAbsFolder11, validation=u'', mandatory=u'yes', name=u'DestinationNetmask', value=u'255.255.255.255', key=u'DestinationNetmask', locked=u'no', cardinality=u'unspecified')
vnsAbsParam23 = cobra.model.vns.AbsParam(vnsAbsFolder11, validation=u'', mandatory=u'yes', name=u'DestinationPort', value=u'80', key=u'DestinationPort', locked=u'no', cardinality=u'unspecified')
vnsAbsParam24 = cobra.model.vns.AbsParam(vnsAbsFolder11, validation=u'', mandatory=u'yes', name=u'Protocol', value=u'TCP', key=u'Protocol', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder12 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg, locked=u'no', name=u'Pool', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Pool', cardinality=u'unspecified')
vnsAbsParam25 = cobra.model.vns.AbsParam(vnsAbsFolder12, validation=u'', mandatory=u'no', name=u'EPGDestinationPort', value=u'80', key=u'EPGDestinationPort', locked=u'no', cardinality=u'unspecified')
vnsAbsParam26 = cobra.model.vns.AbsParam(vnsAbsFolder12, validation=u'', mandatory=u'no', name=u'EPGConnectionLimit', value=u'0', key=u'EPGConnectionLimit', locked=u'no', cardinality=u'unspecified')
vnsAbsParam27 = cobra.model.vns.AbsParam(vnsAbsFolder12, validation=u'', mandatory=u'no', name=u'EPGRatio', value=u'1', key=u'EPGRatio', locked=u'no', cardinality=u'unspecified')
vnsAbsParam28 = cobra.model.vns.AbsParam(vnsAbsFolder12, validation=u'', mandatory=u'no', name=u'EPGConnectionRateLimit', value=u'0', key=u'EPGConnectionRateLimit', locked=u'no', cardinality=u'unspecified')
vnsAbsCfgRel2 = cobra.model.vns.AbsCfgRel(vnsAbsFolder12, mandatory=u'no', name=u'PoolRel', key=u'PoolRel', locked=u'no', cardinality=u'unspecified', targetName=u'LocalTraffic/Pool')
vnsAbsFolder13 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg, locked=u'no', name=u'NetworkRelation', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'NetworkRelation', cardinality=u'unspecified')
vnsAbsCfgRel3 = cobra.model.vns.AbsCfgRel(vnsAbsFolder13, mandatory=u'no', name=u'NetworkRel', key=u'NetworkRel', locked=u'no', cardinality=u'unspecified', targetName=u'Network')
vnsAbsFuncProfGrp2 = cobra.model.vns.AbsFuncProfGrp(vnsAbsFuncProfContr, ownerKey=u'', name=u'ASAvTransparent', descr=u'', ownerTag=u'')
vnsAbsFuncProf2 = cobra.model.vns.AbsFuncProf(vnsAbsFuncProfGrp2, ownerKey=u'', name=u'ASAvTransparent', descr=u'', ownerTag=u'')
vnsRsProfToMFunc2 = cobra.model.vns.RsProfToMFunc(vnsAbsFuncProf2, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall')
vnsAbsDevCfg2 = cobra.model.vns.AbsDevCfg(vnsAbsFuncProf2, ownerKey=u'', name=u'devConfig', descr=u'', ownerTag=u'')
vnsAbsFolder14 = cobra.model.vns.AbsFolder(vnsAbsDevCfg2, locked=u'no', name=u'internalIf', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Interface', cardinality=u'unspecified')
vnsAbsFolder15 = cobra.model.vns.AbsFolder(vnsAbsFolder14, locked=u'no', name=u'internalIfCfg', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InterfaceConfig', cardinality=u'unspecified')
vnsAbsParam29 = cobra.model.vns.AbsParam(vnsAbsFolder15, validation=u'', mandatory=u'no', name=u'internal_security_level', value=u'100', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsAbsCfgRel4 = cobra.model.vns.AbsCfgRel(vnsAbsFolder15, mandatory=u'no', name=u'intbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsAbsFolder16 = cobra.model.vns.AbsFolder(vnsAbsDevCfg2, locked=u'no', name=u'access-list-inbound', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessList', cardinality=u'unspecified')
vnsAbsFolder17 = cobra.model.vns.AbsFolder(vnsAbsFolder16, locked=u'no', name=u'permit-https', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam30 = cobra.model.vns.AbsParam(vnsAbsFolder17, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam31 = cobra.model.vns.AbsParam(vnsAbsFolder17, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder18 = cobra.model.vns.AbsFolder(vnsAbsFolder17, locked=u'no', name=u'tcp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam32 = cobra.model.vns.AbsParam(vnsAbsFolder18, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder19 = cobra.model.vns.AbsFolder(vnsAbsFolder17, locked=u'no', name=u'dest-service', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_service', cardinality=u'unspecified')
vnsAbsParam33 = cobra.model.vns.AbsParam(vnsAbsFolder19, validation=u'', mandatory=u'yes', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsAbsParam34 = cobra.model.vns.AbsParam(vnsAbsFolder19, validation=u'', mandatory=u'yes', name=u'port', value=u'https', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder20 = cobra.model.vns.AbsFolder(vnsAbsFolder17, locked=u'no', name=u'src-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam35 = cobra.model.vns.AbsParam(vnsAbsFolder20, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder21 = cobra.model.vns.AbsFolder(vnsAbsFolder17, locked=u'no', name=u'dest-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam36 = cobra.model.vns.AbsParam(vnsAbsFolder21, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder22 = cobra.model.vns.AbsFolder(vnsAbsFolder16, locked=u'no', name=u'permit-icmp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam37 = cobra.model.vns.AbsParam(vnsAbsFolder22, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam38 = cobra.model.vns.AbsParam(vnsAbsFolder22, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder23 = cobra.model.vns.AbsFolder(vnsAbsFolder22, locked=u'no', name=u'destination_address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam39 = cobra.model.vns.AbsParam(vnsAbsFolder23, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder24 = cobra.model.vns.AbsFolder(vnsAbsFolder22, locked=u'no', name=u'protocol', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam40 = cobra.model.vns.AbsParam(vnsAbsFolder24, validation=u'', mandatory=u'no', name=u'icmp', value=u'icmp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder25 = cobra.model.vns.AbsFolder(vnsAbsFolder22, locked=u'no', name=u'source_address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam41 = cobra.model.vns.AbsParam(vnsAbsFolder25, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder26 = cobra.model.vns.AbsFolder(vnsAbsFolder16, locked=u'no', name=u'permit-http', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam42 = cobra.model.vns.AbsParam(vnsAbsFolder26, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam43 = cobra.model.vns.AbsParam(vnsAbsFolder26, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder27 = cobra.model.vns.AbsFolder(vnsAbsFolder26, locked=u'no', name=u'tcp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam44 = cobra.model.vns.AbsParam(vnsAbsFolder27, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder28 = cobra.model.vns.AbsFolder(vnsAbsFolder26, locked=u'no', name=u'dest-service', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_service', cardinality=u'unspecified')
vnsAbsParam45 = cobra.model.vns.AbsParam(vnsAbsFolder28, validation=u'', mandatory=u'yes', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsAbsParam46 = cobra.model.vns.AbsParam(vnsAbsFolder28, validation=u'', mandatory=u'yes', name=u'port', value=u'http', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder29 = cobra.model.vns.AbsFolder(vnsAbsFolder26, locked=u'no', name=u'src-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam47 = cobra.model.vns.AbsParam(vnsAbsFolder29, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder30 = cobra.model.vns.AbsFolder(vnsAbsFolder26, locked=u'no', name=u'dest-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam48 = cobra.model.vns.AbsParam(vnsAbsFolder30, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder31 = cobra.model.vns.AbsFolder(vnsAbsDevCfg2, locked=u'no', name=u'externalIf', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Interface', cardinality=u'unspecified')
vnsAbsFolder32 = cobra.model.vns.AbsFolder(vnsAbsFolder31, locked=u'no', name=u'externalIfCfg', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InterfaceConfig', cardinality=u'unspecified')
vnsAbsParam49 = cobra.model.vns.AbsParam(vnsAbsFolder32, validation=u'', mandatory=u'no', name=u'external_security_level', value=u'0', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsAbsCfgRel5 = cobra.model.vns.AbsCfgRel(vnsAbsFolder32, mandatory=u'no', name=u'extbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsAbsFolder33 = cobra.model.vns.AbsFolder(vnsAbsFolder31, locked=u'no', name=u'StaticRoute', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'StaticRoute', cardinality=u'unspecified')
vnsAbsFolder34 = cobra.model.vns.AbsFolder(vnsAbsFolder31, locked=u'no', name=u'ExtAccessGroup', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessGroup', cardinality=u'unspecified')
vnsAbsCfgRel6 = cobra.model.vns.AbsCfgRel(vnsAbsFolder34, mandatory=u'no', name=u'name', key=u'inbound_access_list_name', locked=u'no', cardinality=u'unspecified', targetName=u'access-list-inbound')
vnsAbsFolder35 = cobra.model.vns.AbsFolder(vnsAbsDevCfg2, locked=u'no', name=u'1', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'BridgeGroupIntf', cardinality=u'unspecified')
vnsAbsParam50 = cobra.model.vns.AbsParam(vnsAbsFolder35, validation=u'', mandatory=u'no', name=u'ipv6_nd_dad_attempts', value=u'1', key=u'ipv6_nd_dad_attempts', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder36 = cobra.model.vns.AbsFolder(vnsAbsFolder35, locked=u'no', name=u'IPv4Address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'IPv4Address', cardinality=u'unspecified')
vnsAbsParam51 = cobra.model.vns.AbsParam(vnsAbsFolder36, validation=u'', mandatory=u'yes', name=u'ipv4_address', value=u'172.16.33.253/255.255.255.0', key=u'ipv4_address', locked=u'no', cardinality=u'unspecified')
vnsAbsFuncCfg2 = cobra.model.vns.AbsFuncCfg(vnsAbsFuncProf2, ownerKey=u'', name=u'funcConfig', descr=u'', ownerTag=u'')
vnsAbsFolder37 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg2, locked=u'no', name=u'IntConfig', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InIntfConfigRelFolder', cardinality=u'unspecified')
vnsAbsCfgRel7 = cobra.model.vns.AbsCfgRel(vnsAbsFolder37, mandatory=u'no', name=u'InConfigrel', key=u'InIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'internalIf')
vnsAbsFolder38 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg2, locked=u'no', name=u'ExtConfig', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'ExIntfConfigRelFolder', cardinality=u'unspecified')
vnsAbsCfgRel8 = cobra.model.vns.AbsCfgRel(vnsAbsFolder38, mandatory=u'no', name=u'ExtConfigrel', key=u'ExIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'externalIf')
vnsAbsFuncProfGrp3 = cobra.model.vns.AbsFuncProfGrp(vnsAbsFuncProfContr, ownerKey=u'', name=u'PermitHost', descr=u'', ownerTag=u'')
vnsAbsFuncProf3 = cobra.model.vns.AbsFuncProf(vnsAbsFuncProfGrp3, ownerKey=u'', name=u'PermitHost', descr=u'', ownerTag=u'')
vnsRsProfToMFunc3 = cobra.model.vns.RsProfToMFunc(vnsAbsFuncProf3, tDn=u'uni/infra/mDev-CISCO-ASA-1.2/mFunc-Firewall')
vnsAbsDevCfg3 = cobra.model.vns.AbsDevCfg(vnsAbsFuncProf3, ownerKey=u'', name=u'devConfig', descr=u'', ownerTag=u'')
vnsAbsFolder39 = cobra.model.vns.AbsFolder(vnsAbsDevCfg3, locked=u'no', name=u'internalIf', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Interface', cardinality=u'unspecified')
vnsAbsFolder40 = cobra.model.vns.AbsFolder(vnsAbsFolder39, locked=u'no', name=u'internalIfCfg', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InterfaceConfig', cardinality=u'unspecified')
vnsAbsParam52 = cobra.model.vns.AbsParam(vnsAbsFolder40, validation=u'', mandatory=u'no', name=u'internal_security_level', value=u'100', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsAbsCfgRel9 = cobra.model.vns.AbsCfgRel(vnsAbsFolder40, mandatory=u'no', name=u'intbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsAbsFolder41 = cobra.model.vns.AbsFolder(vnsAbsDevCfg3, locked=u'no', name=u'access-list-inbound', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessList', cardinality=u'unspecified')
vnsAbsFolder42 = cobra.model.vns.AbsFolder(vnsAbsFolder41, locked=u'no', name=u'permit-https', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam53 = cobra.model.vns.AbsParam(vnsAbsFolder42, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam54 = cobra.model.vns.AbsParam(vnsAbsFolder42, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder43 = cobra.model.vns.AbsFolder(vnsAbsFolder42, locked=u'no', name=u'tcp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam55 = cobra.model.vns.AbsParam(vnsAbsFolder43, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder44 = cobra.model.vns.AbsFolder(vnsAbsFolder42, locked=u'no', name=u'dest-service', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_service', cardinality=u'unspecified')
vnsAbsParam56 = cobra.model.vns.AbsParam(vnsAbsFolder44, validation=u'', mandatory=u'yes', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsAbsParam57 = cobra.model.vns.AbsParam(vnsAbsFolder44, validation=u'', mandatory=u'yes', name=u'port', value=u'https', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder45 = cobra.model.vns.AbsFolder(vnsAbsFolder42, locked=u'no', name=u'src-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam58 = cobra.model.vns.AbsParam(vnsAbsFolder45, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder46 = cobra.model.vns.AbsFolder(vnsAbsFolder42, locked=u'no', name=u'dest-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam59 = cobra.model.vns.AbsParam(vnsAbsFolder46, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder47 = cobra.model.vns.AbsFolder(vnsAbsFolder41, locked=u'no', name=u'permit-icmp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam60 = cobra.model.vns.AbsParam(vnsAbsFolder47, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam61 = cobra.model.vns.AbsParam(vnsAbsFolder47, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder48 = cobra.model.vns.AbsFolder(vnsAbsFolder47, locked=u'no', name=u'destination_address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam62 = cobra.model.vns.AbsParam(vnsAbsFolder48, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder49 = cobra.model.vns.AbsFolder(vnsAbsFolder47, locked=u'no', name=u'protocol', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam63 = cobra.model.vns.AbsParam(vnsAbsFolder49, validation=u'', mandatory=u'no', name=u'icmp', value=u'icmp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder50 = cobra.model.vns.AbsFolder(vnsAbsFolder47, locked=u'no', name=u'source_address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam64 = cobra.model.vns.AbsParam(vnsAbsFolder50, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder51 = cobra.model.vns.AbsFolder(vnsAbsFolder41, locked=u'no', name=u'permit-http', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessControlEntry', cardinality=u'unspecified')
vnsAbsParam65 = cobra.model.vns.AbsParam(vnsAbsFolder51, validation=u'', mandatory=u'yes', name=u'order1', value=u'10', key=u'order', locked=u'no', cardinality=u'unspecified')
vnsAbsParam66 = cobra.model.vns.AbsParam(vnsAbsFolder51, validation=u'', mandatory=u'yes', name=u'action-permit', value=u'permit', key=u'action', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder52 = cobra.model.vns.AbsFolder(vnsAbsFolder51, locked=u'no', name=u'tcp', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'protocol', cardinality=u'unspecified')
vnsAbsParam67 = cobra.model.vns.AbsParam(vnsAbsFolder52, validation=u'', mandatory=u'no', name=u'tcp', value=u'tcp', key=u'name_number', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder53 = cobra.model.vns.AbsFolder(vnsAbsFolder51, locked=u'no', name=u'dest-service', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_service', cardinality=u'unspecified')
vnsAbsParam68 = cobra.model.vns.AbsParam(vnsAbsFolder53, validation=u'', mandatory=u'yes', name=u'op', value=u'eq', key=u'operator', locked=u'no', cardinality=u'unspecified')
vnsAbsParam69 = cobra.model.vns.AbsParam(vnsAbsFolder53, validation=u'', mandatory=u'yes', name=u'port', value=u'http', key=u'low_port', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder54 = cobra.model.vns.AbsFolder(vnsAbsFolder51, locked=u'no', name=u'src-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'source_address', cardinality=u'unspecified')
vnsAbsParam70 = cobra.model.vns.AbsParam(vnsAbsFolder54, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder55 = cobra.model.vns.AbsFolder(vnsAbsFolder51, locked=u'no', name=u'dest-address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'destination_address', cardinality=u'unspecified')
vnsAbsParam71 = cobra.model.vns.AbsParam(vnsAbsFolder55, validation=u'', mandatory=u'no', name=u'any', value=u'any', key=u'any', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder56 = cobra.model.vns.AbsFolder(vnsAbsDevCfg3, locked=u'no', name=u'externalIf', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'Interface', cardinality=u'unspecified')
vnsAbsFolder57 = cobra.model.vns.AbsFolder(vnsAbsFolder56, locked=u'no', name=u'externalIfCfg', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InterfaceConfig', cardinality=u'unspecified')
vnsAbsParam72 = cobra.model.vns.AbsParam(vnsAbsFolder57, validation=u'', mandatory=u'no', name=u'external_security_level', value=u'0', key=u'security_level', locked=u'no', cardinality=u'unspecified')
vnsAbsCfgRel10 = cobra.model.vns.AbsCfgRel(vnsAbsFolder57, mandatory=u'no', name=u'extbridge', key=u'bridge_group', locked=u'no', cardinality=u'unspecified', targetName=u'1')
vnsAbsFolder58 = cobra.model.vns.AbsFolder(vnsAbsFolder56, locked=u'no', name=u'StaticRoute', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'StaticRoute', cardinality=u'unspecified')
vnsAbsFolder59 = cobra.model.vns.AbsFolder(vnsAbsFolder58, locked=u'no', name=u'route', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'route', cardinality=u'unspecified')
vnsAbsParam73 = cobra.model.vns.AbsParam(vnsAbsFolder59, validation=u'', mandatory=u'yes', name=u'gateway', value=u'172.16.35.254', key=u'gateway', locked=u'no', cardinality=u'unspecified')
vnsAbsParam74 = cobra.model.vns.AbsParam(vnsAbsFolder59, validation=u'', mandatory=u'yes', name=u'network', value=u'0.0.0.0', key=u'network', locked=u'no', cardinality=u'unspecified')
vnsAbsParam75 = cobra.model.vns.AbsParam(vnsAbsFolder59, validation=u'', mandatory=u'yes', name=u'netmask', value=u'0.0.0.0', key=u'netmask', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder60 = cobra.model.vns.AbsFolder(vnsAbsFolder56, locked=u'no', name=u'ExtAccessGroup', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'AccessGroup', cardinality=u'unspecified')
vnsAbsCfgRel11 = cobra.model.vns.AbsCfgRel(vnsAbsFolder60, mandatory=u'no', name=u'name', key=u'inbound_access_list_name', locked=u'no', cardinality=u'unspecified', targetName=u'access-list-inbound')
vnsAbsFolder61 = cobra.model.vns.AbsFolder(vnsAbsDevCfg3, locked=u'no', name=u'1', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'BridgeGroupIntf', cardinality=u'unspecified')
vnsAbsParam76 = cobra.model.vns.AbsParam(vnsAbsFolder61, validation=u'', mandatory=u'no', name=u'ipv6_nd_dad_attempts', value=u'1', key=u'ipv6_nd_dad_attempts', locked=u'no', cardinality=u'unspecified')
vnsAbsFolder62 = cobra.model.vns.AbsFolder(vnsAbsFolder61, locked=u'no', name=u'IPv4Address', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'IPv4Address', cardinality=u'unspecified')
vnsAbsParam77 = cobra.model.vns.AbsParam(vnsAbsFolder62, validation=u'', mandatory=u'yes', name=u'ipv4_address', value=u'172.16.35.252/255.255.255.0', key=u'ipv4_address', locked=u'no', cardinality=u'unspecified')
vnsAbsFuncCfg3 = cobra.model.vns.AbsFuncCfg(vnsAbsFuncProf3, ownerKey=u'', name=u'funcConfig', descr=u'', ownerTag=u'')
vnsAbsFolder63 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg3, locked=u'no', name=u'IntConfig', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'InIntfConfigRelFolder', cardinality=u'unspecified')
vnsAbsCfgRel12 = cobra.model.vns.AbsCfgRel(vnsAbsFolder63, mandatory=u'no', name=u'InConfigrel', key=u'InIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'internalIf')
vnsAbsFolder64 = cobra.model.vns.AbsFolder(vnsAbsFuncCfg3, locked=u'no', name=u'ExtConfig', devCtxLbl=u'', scopedBy=u'epg', profileBehaviorShared=u'no', key=u'ExIntfConfigRelFolder', cardinality=u'unspecified')
vnsAbsCfgRel13 = cobra.model.vns.AbsCfgRel(vnsAbsFolder64, mandatory=u'no', name=u'ExtConfigrel', key=u'ExIntfConfigRel', locked=u'no', cardinality=u'unspecified', targetName=u'externalIf')

fvRsBgpCtxPol = cobra.model.fv.RsBgpCtxPol(fvCtx, tnBgpCtxPolName=u'')
fvRsCtxToExtRouteTagPol = cobra.model.fv.RsCtxToExtRouteTagPol(fvCtx, tnL3extRouteTagPolName=u'')
fvRsOspfCtxPol = cobra.model.fv.RsOspfCtxPol(fvCtx, tnOspfCtxPolName=u'')
vzAny = cobra.model.vz.Any(fvCtx, matchT=u'AtleastOne', name=u'', descr=u'')
fvRsCtxToEpRet = cobra.model.fv.RsCtxToEpRet(fvCtx, tnFvEpRetPolName=u'')
vnsLDevCtx = cobra.model.vns.LDevCtx(fvTenant, ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', nodeNameOrLbl=u'Firewall', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', descr=u'', name=u'')
vnsRsLDevCtxToLDev = cobra.model.vns.RsLDevCtxToLDev(vnsLDevCtx, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-ASAv_Transparent]')
vnsLIfCtx = cobra.model.vns.LIfCtx(vnsLDevCtx, name=u'', descr=u'', connNameOrLbl=u'internal')
vnsRsLIfCtxToBD = cobra.model.vns.RsLIfCtxToBD(vnsLIfCtx, tDn=u'uni/tn-DDMY/BD-DDMY_BD_Transit')
vnsRsLIfCtxToLIf = cobra.model.vns.RsLIfCtxToLIf(vnsLIfCtx, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-ASAv_Transparent]/lDevIfLIf-internal')
vnsLIfCtx2 = cobra.model.vns.LIfCtx(vnsLDevCtx, name=u'', descr=u'', connNameOrLbl=u'external')
vnsRsLIfCtxToBD2 = cobra.model.vns.RsLIfCtxToBD(vnsLIfCtx2, tDn=u'uni/tn-DDMY/BD-DDMY_BD_Client')
vnsRsLIfCtxToLIf2 = cobra.model.vns.RsLIfCtxToLIf(vnsLIfCtx2, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-ASAv_Transparent]/lDevIfLIf-external')
vnsLDevCtx2 = cobra.model.vns.LDevCtx(fvTenant, ctrctNameOrLbl=u'ExtToWeb-TnCon-ASAvAndADC', nodeNameOrLbl=u'ADC', graphNameOrLbl=u'ASAv_Transparent_and_F5BIGIP5250_Two-Arm', descr=u'', name=u'')
vnsRsLDevCtxToLDev2 = cobra.model.vns.RsLDevCtxToLDev(vnsLDevCtx2, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-F5BIGIP5250]')
vnsLIfCtx3 = cobra.model.vns.LIfCtx(vnsLDevCtx2, name=u'', descr=u'', connNameOrLbl=u'internal')
vnsRsLIfCtxToBD3 = cobra.model.vns.RsLIfCtxToBD(vnsLIfCtx3, tDn=u'uni/tn-DDMY/BD-DDMY_BD_Server')
vnsRsLIfCtxToLIf3 = cobra.model.vns.RsLIfCtxToLIf(vnsLIfCtx3, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-F5BIGIP5250]/lDevIfLIf-internal')
vnsLIfCtx4 = cobra.model.vns.LIfCtx(vnsLDevCtx2, name=u'', descr=u'', connNameOrLbl=u'external')
vnsRsLIfCtxToBD4 = cobra.model.vns.RsLIfCtxToBD(vnsLIfCtx4, tDn=u'uni/tn-DDMY/BD-DDMY_BD_Transit')
vnsRsLIfCtxToLIf4 = cobra.model.vns.RsLIfCtxToLIf(vnsLIfCtx4, tDn=u'uni/tn-DDMY/lDevIf-[uni/tn-common/lDevVip-F5BIGIP5250]/lDevIfLIf-external')
vnsSvcCont = cobra.model.vns.SvcCont(fvTenant)
aaaDomainRef = cobra.model.aaa.DomainRef(fvTenant, ownerKey=u'', name=u'DDMY', descr=u'', ownerTag=u'')
l3extOut = cobra.model.l3ext.Out(fvTenant, ownerKey=u'', name=u'DDMY_L3Out_OSPF', descr=u'', targetDscp=u'unspecified', enforceRtctrl=u'export', ownerTag=u'')
l3extLNodeP = cobra.model.l3ext.LNodeP(l3extOut, ownerKey=u'', name=u'Leaf1_External', descr=u'', targetDscp=u'unspecified', tag=u'yellow-green', ownerTag=u'')
l3extRsNodeL3OutAtt = cobra.model.l3ext.RsNodeL3OutAtt(l3extLNodeP, rtrIdLoopBack=u'yes', rtrId=u'172.16.34.1', tDn=u'topology/pod-1/node-101')
l3extLIfP = cobra.model.l3ext.LIfP(l3extLNodeP, ownerKey=u'', tag=u'yellow-green', name=u'Leaf1_OSPF', descr=u'', ownerTag=u'')
ospfIfP = cobra.model.ospf.IfP(l3extLIfP, authKeyId=u'1', authType=u'none', name=u'', descr=u'')
ospfRsIfPol = cobra.model.ospf.RsIfPol(ospfIfP, tnOspfIfPolName=u'OSPF-P2P')
l3extRsNdIfPol = cobra.model.l3ext.RsNdIfPol(l3extLIfP, tnNdIfPolName=u'')
l3extRsIngressQosDppPol = cobra.model.l3ext.RsIngressQosDppPol(l3extLIfP, tnQosDppPolName=u'')
l3extRsEgressQosDppPol = cobra.model.l3ext.RsEgressQosDppPol(l3extLIfP, tnQosDppPolName=u'')
l3extRsPathL3OutAtt = cobra.model.l3ext.RsPathL3OutAtt(l3extLIfP, addr=u'172.16.34.17/28', descr=u'', encapScope=u'local', targetDscp=u'unspecified', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', mode=u'regular', encap=u'unknown', ifInstT=u'l3-port', mtu=u'1500', tDn=u'topology/pod-1/paths-101/pathep-[eth1/34]')
l3extLNodeP2 = cobra.model.l3ext.LNodeP(l3extOut, ownerKey=u'', name=u'Leaf2_External', descr=u'', targetDscp=u'unspecified', tag=u'yellow-green', ownerTag=u'')
l3extRsNodeL3OutAtt2 = cobra.model.l3ext.RsNodeL3OutAtt(l3extLNodeP2, rtrIdLoopBack=u'yes', rtrId=u'172.16.34.2', tDn=u'topology/pod-1/node-102')
l3extLIfP2 = cobra.model.l3ext.LIfP(l3extLNodeP2, ownerKey=u'', tag=u'yellow-green', name=u'Leaf2_OSPF', descr=u'', ownerTag=u'')
ospfIfP2 = cobra.model.ospf.IfP(l3extLIfP2, authKeyId=u'1', authType=u'none', name=u'', descr=u'')
ospfRsIfPol2 = cobra.model.ospf.RsIfPol(ospfIfP2, tnOspfIfPolName=u'OSPF-P2P')
l3extRsNdIfPol2 = cobra.model.l3ext.RsNdIfPol(l3extLIfP2, tnNdIfPolName=u'')
l3extRsIngressQosDppPol2 = cobra.model.l3ext.RsIngressQosDppPol(l3extLIfP2, tnQosDppPolName=u'')
l3extRsEgressQosDppPol2 = cobra.model.l3ext.RsEgressQosDppPol(l3extLIfP2, tnQosDppPolName=u'')
l3extRsPathL3OutAtt2 = cobra.model.l3ext.RsPathL3OutAtt(l3extLIfP2, addr=u'172.16.34.33/28', descr=u'', encapScope=u'local', targetDscp=u'unspecified', llAddr=u'::', mac=u'00:22:BD:F8:19:FF', mode=u'regular', encap=u'unknown', ifInstT=u'l3-port', mtu=u'1500', tDn=u'topology/pod-1/paths-102/pathep-[eth1/34]')
l3extRsEctx = cobra.model.l3ext.RsEctx(l3extOut, tnFvCtxName=u'DDMY_VRF')
l3extInstP = cobra.model.l3ext.InstP(l3extOut, prio=u'unspecified', matchT=u'AtleastOne', name=u'L3Out-OSPF-EPG', descr=u'', targetDscp=u'unspecified')
fvRsCons4 = cobra.model.fv.RsCons(l3extInstP, tnVzBrCPName=u'ExtToWeb-TnCon-ASAvAndADC', prio=u'unspecified')
fvRsCustQosPol5 = cobra.model.fv.RsCustQosPol(l3extInstP, tnQosCustomPolName=u'')
l3extSubnet = cobra.model.l3ext.Subnet(l3extInstP, aggregate=u'', ip=u'0.0.0.0/0', name=u'', descr=u'')
ospfExtP = cobra.model.ospf.ExtP(l3extOut, areaCtrl=u'redistribute,summary', areaId=u'backbone', areaType=u'regular', areaCost=u'1', descr=u'')

# commit the generated code to APIC
#print toXMLStr(polUni)
c = cobra.mit.request.ConfigRequest()
c.addMo(fvTenant)
md.commit(c)

print "\n"
print "EGP, contract and service graph have been created successfully."
print "\n"

raw_input("Hit return to create the L3Out interface policy group.")

# build the connectivity using cobra syntax
infraAccPortGrp = cobra.model.infra.AccPortGrp(infraFuncP, ownerKey=u'', name=u'AccessForL3Out', descr=u'', ownerTag=u'')
infraRsL2IfPol = cobra.model.infra.RsL2IfPol(infraAccPortGrp, tnL2IfPolName=u'')
infraRsHIfPol = cobra.model.infra.RsHIfPol(infraAccPortGrp, tnFabricHIfPolName=u'1GAuto')
infraRsL2PortSecurityPol = cobra.model.infra.RsL2PortSecurityPol(infraAccPortGrp, tnL2PortSecurityPolName=u'')
infraRsQosPfcIfPol = cobra.model.infra.RsQosPfcIfPol(infraAccPortGrp, tnQosPfcIfPolName=u'')
infraRsMonIfInfraPol = cobra.model.infra.RsMonIfInfraPol(infraAccPortGrp, tnMonInfraPolName=u'')
infraRsStpIfPol = cobra.model.infra.RsStpIfPol(infraAccPortGrp, tnStpIfPolName=u'')
infraRsQosSdIfPol = cobra.model.infra.RsQosSdIfPol(infraAccPortGrp, tnQosSdIfPolName=u'')
infraRsAttEntP = cobra.model.infra.RsAttEntP(infraAccPortGrp, tDn=u'uni/infra/attentp-L3Out-AEP')
infraRsMcpIfPol = cobra.model.infra.RsMcpIfPol(infraAccPortGrp, tnMcpIfPolName=u'')
infraRsQosDppIfPol = cobra.model.infra.RsQosDppIfPol(infraAccPortGrp, tnQosDppPolName=u'')
infraRsQosIngressDppIfPol = cobra.model.infra.RsQosIngressDppIfPol(infraAccPortGrp, tnQosDppPolName=u'')
infraRsQosEgressDppIfPol = cobra.model.infra.RsQosEgressDppIfPol(infraAccPortGrp, tnQosDppPolName=u'')
infraRsStormctrlIfPol = cobra.model.infra.RsStormctrlIfPol(infraAccPortGrp, tnStormctrlIfPolName=u'')
infraRsLldpIfPol = cobra.model.infra.RsLldpIfPol(infraAccPortGrp, tnLldpIfPolName=u'')
infraRsFcIfPol = cobra.model.infra.RsFcIfPol(infraAccPortGrp, tnFcIfPolName=u'')
infraRsCdpIfPol = cobra.model.infra.RsCdpIfPol(infraAccPortGrp, tnCdpIfPolName=u'EnableCDP')

# commit the generated code to APIC
#print toXMLStr(polUni)
d = cobra.mit.request.ConfigRequest()
d.addMo(infraFuncP)
md.commit(d)

print "\n"
print "L3Out interface policy group has been created successfully."
print "\n"
print "Your network infra provisioning has been completed just within a few seconds."
print "\n"
print "Exiting script.."